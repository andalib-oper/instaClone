name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install -f

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          android-sdk-version: '29.0.3'
      - name: Install Android Build Tools
        run: |
          yes | sdkmanager --licenses
          sdkmanager "build-tools;29.0.3"
      - name: Set JAVA_HOME for Gradle
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - name: Create Keystore File
        run: |
          rm -f android/app/your_key_name.keystore
          echo ${{ secrets.ANDROID_SIGNING_KEY }} | base64 --decode > android/app/your_key_name.keystore

      - name: Verify Keystore Size
        run: |
          echo "Keystore size:"
          du -h android/app/your_key_name.keystore

      - name: Verify Keystore File with Keytool
        run: |
          keytool -list -v -keystore android/app/your_key_name.keystore -storepass ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}

      - name: Print Keystore File Content
        run: |
          cat android/app/your_key_name.keystore

      - name: Print Keystore File Permissions
        run: |
          ls -l android/app/your_key_name.keystore

      - name: Build Android APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleRelease

      - name: Sign APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ${{ github.workspace }}/android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
      - name: Verify APK Integrity
        run: |
          cd android/app/build/outputs/apk/release
          jarsigner -verify -verbose -certs app-release.apk
      - name: Upload APK
        id: uploadArtifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}
